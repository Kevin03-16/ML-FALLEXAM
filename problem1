n=2;%number of feature dimensions;
N=10000;%number of iid samples
mu(:,1) = [-1;0]; Sigma(:,:,1) = 0.1*[10 -4;-4,5]; % mean and covariance of data pdf conditioned on label 3
mu(:,2) = [1;0]; Sigma(:,:,2) = 0.1*[5 0;0,2]; % mean and covariance of data pdf conditioned on label 2
mu(:,3) = [0;1]; Sigma(:,:,3) = 0.1*eye(2); % mean and covariance of data pdf conditioned on label 1
classPriors = [0.15,0.35,0.5]; thr = [0,cumsum(classPriors)];
u = rand(1,N); L = zeros(1,N); x = zeros(2,N);
figure(1),clf, colorList = 'rbg';
for l = 1:3
    indices = find(thr(l)<=u & u<thr(l+1));% if u happens to be precisely 1, that sample will get omitted - needs to be fixed
    L(1,indices) = l*ones(1,length(indices));
    x(:,indices) = mvnrnd(m(:,l),Sigma(:,:,l),length(indices))';
    figure(1),
    plot(x(1,indices),x(2,indices),'.','MarkerFaceColor',colorList(l)); 
    axis equal, 
    hold on,
end
legend('Class 1','Class 2','Class 3')
title('data and their true labels')
xlabel('x1')
ylabel('x2')

Nc=[length(find(L==1)),length(find(L==2)),length(find(L==3))];
lamba=[0 1 1;1 0 1;1 1 0];
g=zeros(n,N);
for l=1:3
    g(l,:)=log(evalGaussian(x,mu(:,l),Sigma(:,:,l)))+log(classPriors(l));
end
decision_1=(g(1,:)>max(g(2,:),g(3,:)));
decision_2=(g(2,:)>max(g(1,:),g(3,:)));
decision_3=(g(3,:)>max(g(1,:),g(2,:)));
ind11=find(decision_1==1&L==1);p11=length(ind11)/Nc(1);
ind21=find(decision_2==1&L==1);p21=length(ind21)/Nc(1);
ind31=find(decision_3==1&L==1);p31=length(ind31)/Nc(1);
ind12=find(decision_1==1&L==2);p12=length(ind12)/Nc(2);
ind22=find(decision_2==1&L==2);p22=length(ind22)/Nc(2);
ind32=find(decision_3==1&L==2);p32=length(ind32)/Nc(2);
ind13=find(decision_1==1&L==3);p13=length(ind13)/Nc(3);
ind23=find(decision_2==1&L==3);p23=length(ind23)/Nc(3);
ind33=find(decision_3==1&L==3);p33=length(ind33)/Nc(3);
p_error=[(p21+p31) (p12+p32) (p13+p23)]*Nc'/N;%p=(p10*Nc(1)+p01*Nc(2))/N;
error_num=[length(ind12),length(ind13),length(ind21),length(ind23),length(ind31),length(ind32)];
fprintf('the total number of errors are %d,\n',sum(error_num))
fprintf('the probability of errors is %f,\n',p_error)
figure(2)
%class 1 circle,class 2 +,class 3 square; correct green,incorrect red
plot(x(1,ind11),x(2,ind11),'og');%samples(x1,x2) that belong to label 1 , decision=1;
hold on
plot(x(1,ind12),x(2,ind12),'+r')%samples(x1,x2) that belong to label 1, decision=2;
plot(x(1,ind13),x(2,ind13),'sr')%samples(x1,x2) that belong to label 1, desicion =3;
plot(x(1,ind21),x(2,ind21),'or');%samples(x1,x2) that belong to label 2 , decision=1;
plot(x(1,ind22),x(2,ind22),'+g')%samples(x1,x2) that belong to label 2, decision=2;
plot(x(1,ind23),x(2,ind23),'sr')%samples(x1,x2) that belong to label 2, desicion =3;
plot(x(1,ind31),x(2,ind31),'or');%samples(x1,x2) that belong to label 3 , decision=1;
plot(x(1,ind32),x(2,ind32),'+r')%samples(x1,x2) that belong to label 3, decision=2;
plot(x(1,ind33),x(2,ind33),'sg')%samples(x1,x2) that belong to label 3, desicion =3;
legend('Label=1 & Decision=1','Label=1 & Decision=2','Label=1 & Decision=3','Label=2 & Decision=1','Label=2 & Decision=2','Label=2 & Decision=3','Label=3 & Decision=1','Label=3 & Decision=2','Label=3 & Decision=3')
xlabel('x_1')
ylabel('x_2')
title('data along with their inferred(decision) labels')
axis equal



